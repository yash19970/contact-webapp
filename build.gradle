buildscript {
    ext {
        springBootVersion = '1.5.19.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'application'
mainClassName = "com.contact.contactwebapp.ContactWebappApplication"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.contact.contactwebapp'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

apply plugin: 'war'
war{
 baseName ='contactwebapp'
}


repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
  jcenter()
}


dependencies {
  compile('org.springframework.boot:spring-boot-starter-data-jpa')
  compile('org.springframework.boot:spring-boot-starter-data-redis')
  compile('org.springframework.boot:spring-boot-starter-web')
  runtime('mysql:mysql-connector-java')
  compile'com.zaxxer:HikariCP:3.1.0'
  compileOnly('org.projectlombok:lombok')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.4'
  compile group: 'org.testng', name: 'testng', version: '6.8.5'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
  compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
}

configurations.all {
    //exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'logback-classic'
}

test {
    useTestNG()
}
applicationDefaultJvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=23040"
]

if (project.hasProperty('env')) {
    println "Target environment: $env"
    sourceSets.main.resources.srcDir "src/main/resources/$env"
}